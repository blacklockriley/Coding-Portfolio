     1                                 %line 1+1 print.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 [section .data]
    14 00000000 312B322B332B2E2E2E-    string db "1+2+3+...+99=", 0
    15 00000000 2B39393D00         
    16 0000000E 3030303000             ascii db "0000", 0
    17                                 
    18                                 [section .bss]
    19 00000000 <gap>                  sum resw 1
    20                                 
    21                                 [section .text]
    22                                 [global _start]
    23                                 
    24                                 _start:
    25 00000000 66C70425[00000000]-     mov word[sum], 0
    26 00000000 0000               
    27 0000000A 66B90100                mov cx, 1
    28                                 
    29                                 calculate_sum:
    30 0000000E 66010C25[00000000]      add word[sum], cx
    31 00000016 66FFC1                  inc cx
    32                                 
    33 00000019 6683F964                cmp cx, 100
    34 0000001D 7CED                    jl calculate_sum
    35                                 
    36 0000001F 668B0425[00000000]      mov ax, [sum]
    37 00000027 E830000000              call itoa
    38                                 
    39 0000002C B804000000              mov eax, 4
    40 00000031 BB01000000              mov ebx, 1
    41 00000036 B9[00000000]            mov ecx, string
    42 0000003B BA0E000000              mov edx, 14
    43 00000040 CD80                    int 0x80
    44                                 
    45 00000042 B804000000              mov eax, 4
    46 00000047 BB01000000              mov ebx, 1
    47 0000004C B9[00000000]            mov ecx, ascii
    48 00000051 BA05000000              mov edx, 5
    49 00000056 CD80                    int 0x80
    50                                 
    51 00000058 B801000000              mov eax, 1
    52 0000005D 31DB                    xor ebx, ebx
    53 0000005F CD80                    int 0x80
    54                                 
    55                                 itoa:
    56 00000061 66BF[0300]              mov di, ascii + 3
    57 00000065 66B90A00                mov cx, 10
    58                                 
    59                                 itoa_loop:
    60 00000069 6631D2                  xor dx, dx
    61 0000006C 66F7F1                  div cx
    62 0000006F 80C230                  add dl, '0'
    63 00000072 678817                  mov [edi], dl
    64 00000075 66FFCF                  dec di
    65 00000078 6685C0                  test ax, ax
    66 0000007B 75EA                    jnz itoa_loop
    67                                 
    68 0000007D C3                      ret
